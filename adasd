[33mcommit 6e3aa02a8fc27d28d47d456c8ded1720dccde531[m[33m ([m[1;36mHEAD -> [m[1;32mlesson27[m[33m, [m[1;31morigin/lesson27[m[33m)[m
Author: natariyz <evgeniy.vabishevich.99@mail.ru>
Date:   Sat Feb 18 15:05:50 2023 +0300

    Created ability to connect to databse and two classes ProductsDAO,CategoryDAO, witch can get categories and products from database

[1mdiff --git a/WebShop/pom.xml b/WebShop/pom.xml[m
[1mindex 9a73234..10ed1f5 100644[m
[1m--- a/WebShop/pom.xml[m
[1m+++ b/WebShop/pom.xml[m
[36m@@ -18,6 +18,12 @@[m
     </properties>[m
 [m
     <dependencies>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.postgresql</groupId>[m
[32m+[m[32m            <artifactId>postgresql</artifactId>[m
[32m+[m[32m            <version>42.5.4</version>[m
[32m+[m[32m        </dependency>[m
[32m+[m
         <dependency>[m
             <groupId>org.glassfish.web</groupId>[m
             <artifactId>jakarta.servlet.jsp.jstl</artifactId>[m
[1mdiff --git a/WebShop/src/main/java/com/tms/utilsDB/CategoryDAO.java b/WebShop/src/main/java/com/tms/utilsDB/CategoryDAO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2192839[m
[1m--- /dev/null[m
[1m+++ b/WebShop/src/main/java/com/tms/utilsDB/CategoryDAO.java[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32mpackage com.tms.utilsDB;[m
[32m+[m
[32m+[m[32mimport com.tms.webshop.model.Category;[m
[32m+[m
[32m+[m[32mimport java.sql.Connection;[m
[32m+[m[32mimport java.sql.ResultSet;[m
[32m+[m[32mimport java.sql.SQLException;[m
[32m+[m[32mimport java.sql.Statement;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mpublic class CategoryDAO {[m
[32m+[m[32m    private Connection connection;[m
[32m+[m
[32m+[m[32m    public CategoryDAO() {[m
[32m+[m[32m        connection = DBConnectionContainer.INSTANCE.getConnection();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public List<Category> getCategories() {[m
[32m+[m[32m        ProductsDAO productsDAO = new ProductsDAO();[m
[32m+[m[32m        List<Category> categories = new ArrayList<>();[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            Statement statement = connection.createStatement();[m
[32m+[m[32m            ResultSet resultSet = statement.executeQuery("SELECT * FROM categories");[m
[32m+[m
[32m+[m[32m            while (resultSet.next()) {[m
[32m+[m[32m                Category category = new Category();[m
[32m+[m
[32m+[m[32m                category.setId(resultSet.getInt("id"));[m
[32m+[m[32m                category.setName(resultSet.getString("name"));[m
[32m+[m[32m                category.setImageName(resultSet.getString("image_name"));[m
[32m+[m[32m                category.setProductList(productsDAO.findCategoryProducts(category.getId()));[m
[32m+[m
[32m+[m[32m                categories.add(category);[m
[32m+[m[32m            }[m
[32m+[m[32m        } catch (SQLException e) {[m
[32m+[m[32m            System.out.println("SQL exception" + e.getMessage());[m
[32m+[m[32m        }[m
[32m+[m[32m        return categories;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/WebShop/src/main/java/com/tms/utilsDB/DBConnectionContainer.java b/WebShop/src/main/java/com/tms/utilsDB/DBConnectionContainer.java[m
[1mnew file mode 100644[m
[1mindex 0000000..584af20[m
[1m--- /dev/null[m
[1m+++ b/WebShop/src/main/java/com/tms/utilsDB/DBConnectionContainer.java[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32mpackage com.tms.utilsDB;[m
[32m+[m
[32m+[m[32mimport java.sql.Connection;[m
[32m+[m[32mimport java.sql.DriverManager;[m
[32m+[m[32mimport java.sql.SQLException;[m
[32m+[m
[32m+[m[32mpublic enum DBConnectionContainer {[m
[32m+[m[32m    INSTANCE;[m
[32m+[m
[32m+[m[32m    private Connection connection;[m
[32m+[m
[32m+[m[32m    public Connection getConnection() {[m
[32m+[m[32m        if (connection == null) {[m
[32m+[m[32m            try {[m
[32m+[m[32m                Class.forName("org.postgresql.Driver");[m
[32m+[m[32m                connection = DriverManager.getConnection("jdbc:postgresql://localhost:5432/webshop",[m
[32m+[m[32m                        "postgres", "1234qwer");[m
[32m+[m[32m            } catch (SQLException e) {[m
[32m+[m[32m                System.out.println("Connection error");[m
[32m+[m[32m            } catch (ClassNotFoundException e) {[m
[32m+[m[32m                System.out.println("Can't find postgresql driver.");[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return connection;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void closeConnection() {[m
[32m+[m[32m        try {[m
[32m+[m[32m            connection.close();[m
[32m+[m[32m        } catch (SQLException e) {[m
[32m+[m[32m            System.out.println("SQL exception, when trying to close connection.");[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/WebShop/src/main/java/com/tms/utilsDB/ProductsDAO.java b/WebShop/src/main/java/com/tms/utilsDB/ProductsDAO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..555237d[m
[1m--- /dev/null[m
[1m+++ b/WebShop/src/main/java/com/tms/utilsDB/ProductsDAO.java[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32mpackage com.tms.utilsDB;[m
[32m+[m
[32m+[m[32mimport com.tms.webshop.model.Product;[m
[32m+[m
[32m+[m[32mimport java.sql.Connection;[m
[32m+[m[32mimport java.sql.ResultSet;[m
[32m+[m[32mimport java.sql.SQLException;[m
[32m+[m[32mimport java.sql.Statement;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mpublic class ProductsDAO {[m
[32m+[m[32m    private Connection connection;[m
[32m+[m
[32m+[m[32m    public ProductsDAO() {[m
[32m+[m[32m        connection = DBConnectionContainer.INSTANCE.getConnection();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public List<Product> findCategoryProducts(int categoryId) {[m
[32m+[m[32m        List<Product> products = new ArrayList<>();[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            Statement statement = connection.createStatement();[m
[32m+[m[32m            ResultSet resultSet = statement.executeQuery(String.format("SELECT * FROM products WHERE category_id = %d", categoryId));[m
[32m+[m
[32m+[m[32m            while (resultSet.next()) {[m
[32m+[m[32m                Product product = new Product();[m
[32m+[m
[32m+[m[32m                product.setId(resultSet.getInt("id"));[m
[32m+[m[32m                product.setName(resultSet.getString("name"));[m
[32m+[m[32m                product.setDescription(resultSet.getString("description"));[m
[32m+[m[32m                product.setPrice(resultSet.getBigDecimal("price"));[m
[32m+[m[32m                product.setImageName(resultSet.getString("image_name"));[m
[32m+[m
[32m+[m[32m                products.add(product);[m
[32m+[m[32m            }[m
[32m+[m[32m        } catch (SQLException e) {[m
[32m+[m[32m            System.out.println("SQL exception." + e.getMessage());[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return products;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/WebShop/src/main/java/com/tms/webshop/CategoryServlet.java b/WebShop/src/main/java/com/tms/webshop/CategoryServlet.java[m
[1mindex 3a33a83..a3f44c7 100644[m
[1m--- a/WebShop/src/main/java/com/tms/webshop/CategoryServlet.java[m
[1m+++ b/WebShop/src/main/java/com/tms/webshop/CategoryServlet.java[m
[36m@@ -1,12 +1,10 @@[m
 package com.tms.webshop;[m
 [m
 import java.io.*;[m
[31m-import java.math.BigDecimal;[m
[31m-import java.util.ArrayList;[m
 import java.util.List;[m
 [m
[32m+[m[32mimport com.tms.utilsDB.CategoryDAO;[m
 import com.tms.webshop.model.Category;[m
[31m-import com.tms.webshop.model.Product;[m
 import jakarta.servlet.ServletException;[m
 import jakarta.servlet.http.*;[m
 import jakarta.servlet.annotation.*;[m
[36m@@ -14,7 +12,7 @@[m [mimport jakarta.servlet.annotation.*;[m
 @WebServlet(value = "/categories")[m
 public class CategoryServlet extends HttpServlet {[m
     public void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {[m
[31m-        request.getSession().setAttribute("categories", createCategories());[m
[32m+[m[32m        request.getSession().setAttribute("categories", new CategoryDAO().getCategories());[m
         try {[m
             request.getRequestDispatcher("categories.jsp").forward(request, response);[m
         } catch (ServletException e) {[m
[36m@@ -24,40 +22,4 @@[m [mpublic class CategoryServlet extends HttpServlet {[m
 [m
     public void destroy() {[m
     }[m
[31m-[m
[31m-    public List<Category> createCategories(){[m
[31m-        List<Category> categories = new ArrayList<>();[m
[31m-[m
[31m-        List<Product> cameraProducts = new ArrayList<>();[m
[31m-        cameraProducts.add(new Product("Camera ultra", "Very nice camera.", new BigDecimal(500), "camera1.jpg"));[m
[31m-        cameraProducts.add(new Product("Camera mega", "Super nice phone.", new BigDecimal(1500), "camera2.jpg"));[m
[31m-        categories.add(new Category("Cameras", "camera.jpg", cameraProducts));[m
[31m-[m
[31m-        List<Product> phoneProducts = new ArrayList<>();[m
[31m-        phoneProducts.add(new Product("Iphone 11", "Very nice phone.", new BigDecimal(500), "iphone11.png"));[m
[31m-        phoneProducts.add(new Product("Iphone 14", "Same as iphone 11, but more expensive.", new BigDecimal(1500), "iphone14.jpeg"));[m
[31m-        categories.add(new Category("Phones", "phones.jpg", phoneProducts));[m
[31m-[m
[31m-        List<Product> fridgesProducts = new ArrayList<>();[m
[31m-        fridgesProducts.add(new Product("Fridge x200", "Very nice fridge.", new BigDecimal(500), "fridge1.jpg"));[m
[31m-        fridgesProducts.add(new Product("Fridge x1000", "Better then x200.", new BigDecimal(1500), "fridge2.jpg"));[m
[31m-        categories.add(new Category("Fridges", "fridge.jpg", fridgesProducts));[m
[31m-[m
[31m-        List<Product> navigatorsProducts = new ArrayList<>();[m
[31m-        navigatorsProducts.add(new Product("Gps-navigator ultra", "Very nice navigator.", new BigDecimal(500), "navigator1.jpg"));[m
[31m-        navigatorsProducts.add(new Product("Gps-navigator max", "Also very nice.", new BigDecimal(1500), "navigator2.jpg"));[m
[31m-        categories.add(new Category("Gps-navigators", "gps-navigator.jpg", navigatorsProducts));[m
[31m-[m
[31m-        List<Product> laptopsProducts = new ArrayList<>();[m
[31m-        laptopsProducts.add(new Product("MSI GP76 Leopard", "Gaming laptop.", new BigDecimal(500), "laptop1.jpg"));[m
[31m-        laptopsProducts.add(new Product("Lenovo z500", "Casual laptop.", new BigDecimal(1500), "laptop2.jpg"));[m
[31m-        categories.add(new Category("Laptops", "laptops.jpg", laptopsProducts));[m
[31m-[m
[31m-        List<Product> carsProducts = new ArrayList<>();[m
[31m-        carsProducts.add(new Product("Volvo", "Very nice car.", new BigDecimal(500), "car1.jpg"));[m
[31m-        carsProducts.add(new Product("Audi", "Very very nice car.", new BigDecimal(1500), "car2.png"));[m
[31m-        categories.add(new Category("Cars", "car.jpg", carsProducts));[m
[31m-[m
[31m-        return categories;[m
[31m-    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/WebShop/src/main/java/com/tms/webshop/model/Category.java b/WebShop/src/main/java/com/tms/webshop/model/Category.java[m
[1mindex 57aacf7..689d570 100644[m
[1m--- a/WebShop/src/main/java/com/tms/webshop/model/Category.java[m
[1m+++ b/WebShop/src/main/java/com/tms/webshop/model/Category.java[m
[36m@@ -3,18 +3,21 @@[m [mpackage com.tms.webshop.model;[m
 import java.util.List;[m
 [m
 public class Category {[m
[31m-    private String id;[m
[32m+[m[32m    private int id;[m
     private String name;[m
     private String imageName;[m
     private List<Product> productList;[m
 [m
[31m-    public Category(String id, String name, String imageName, List<Product> productList) {[m
[32m+[m[32m    public Category(int id, String name, String imageName, List<Product> productList) {[m
         this.id = id;[m
         this.name = name;[m
         this.imageName = imageName;[m
         this.productList = productList;[m
     }[m
 [m
[32m+[m[32m    public Category() {[m
[32m+[m[32m    }[m
[32m+[m
     public Category(String name, String imageName, List<Product> productList) {[m
         this.name = name;[m
         this.imageName = imageName;[m
[36m@@ -26,11 +29,11 @@[m [mpublic class Category {[m
         this.imageName = imageName;[m
     }[m
 [m
[31m-    public String getId() {[m
[32m+[m[32m    public int getId() {[m
         return id;[m
     }[m
 [m
[31m-    public void setId(String id) {[m
[32m+[m[32m    public void setId(int id) {[m
         this.id = id;[m
     }[m
 [m
[1mdiff --git a/WebShop/src/main/java/com/tms/webshop/model/Product.java b/WebShop/src/main/java/com/tms/webshop/model/Product.java[m
[1mindex 06a269b..404ed34 100644[m
[1m--- a/WebShop/src/main/java/com/tms/webshop/model/Product.java[m
[1m+++ b/WebShop/src/main/java/com/tms/webshop/model/Product.java[m
[36m@@ -9,6 +9,9 @@[m [mpublic class Product {[m
     private BigDecimal price;[m
     private String imageName;[m
 [m
[32m+[m[32m    public Product() {[m
[32m+[m[32m    }[m
[32m+[m
     public Product(String name, String description, BigDecimal price) {[m
         this.id = id;[m
         this.name = name;[m
